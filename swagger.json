{
  "swagger": "2.0",
  "info": {
    "description": "This is a API to manage your customers.",
    "version": "1.0.7",
    "title": "Swagger Customers API",
    "contact": {
      "email": "jesse-jjs@hotmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost",
  "basePath": "/api",
  "tags": [
    {
      "name": "customer",
      "description": "Everything about your Customers"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/customers": {
      "post": {
        "tags": ["customer"],
        "summary": "Add a new customer to the store",
        "description": "",
        "operationId": "addcustomer",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "customer object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Customer created",
            "schema": {
              "$ref": "#/definitions/creationResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/unauthorizedResponse"
            }
          },
          "406": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/badRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "security": [
          {
            "HTTP_AUTHORIZATION_TOKEN": []
          }
        ]
      },
      "get": {
        "tags": ["customer"],
        "summary": "List all customers",
        "description": "Returns a list of all customers",
        "operationId": "getcustomers",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Customers list",
            "schema": {
              "$ref": "#/definitions/listResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/unauthorizedResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "security": [
          {
            "HTTP_AUTHORIZATION_TOKEN": []
          }
        ]
      }
    },
    "/customers/{customerId}": {
      "get": {
        "tags": ["customer"],
        "summary": "Find customer by ID",
        "description": "Returns a single customer",
        "operationId": "getcustomerById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Customers list",
            "schema": {
              "$ref": "#/definitions/listResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/unauthorizedResponse"
            }
          },
          "404": {
            "description": "Customer not found",
            "schema": {
              "$ref": "#/definitions/notFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "security": [
          {
            "HTTP_AUTHORIZATION_TOKEN": []
          }
        ]
      },
      "put": {
        "tags": ["customer"],
        "summary": "Update an existing customer",
        "description": "",
        "operationId": "updatecustomer",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "customer object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer updated",
            "schema": {
              "$ref": "#/definitions/updateResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/unauthorizedResponse"
            }
          },
          "404": {
            "description": "Customer not found",
            "schema": {
              "$ref": "#/definitions/notFoundResponse"
            }
          },
          "406": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/badRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "security": [
          {
            "HTTP_AUTHORIZATION_TOKEN": []
          }
        ]
      },
      "delete": {
        "tags": ["customer"],
        "summary": "Deletes a customer",
        "description": "",
        "operationId": "deletecustomer",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer ID to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer deleted",
            "schema": {
              "$ref": "#/definitions/deletionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/unauthorizedResponse"
            }
          },
          "404": {
            "description": "Customer not found",
            "schema": {
              "$ref": "#/definitions/notFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "security": [
          {
            "HTTP_AUTHORIZATION_TOKEN": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "HTTP_AUTHORIZATION_TOKEN": {
      "type": "apiKey",
      "name": "HTTP_AUTHORIZATION_TOKEN",
      "in": "header"
    }
  },
  "definitions": {
    "creationResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 201
        },
        "message": {
          "type": "string",
          "example": "Customer created"
        },
        "data": {
          "type": "object",
          "properties": {
            "customer_id": {
              "type": "integer",
              "format": "int64",
              "example": 10
            }
          }
        }
      }
    },
    "updateResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Customer updated"
        },
        "data": {
          "type": "object",
          "properties": {
            "customer_id": {
              "type": "integer",
              "format": "int64",
              "example": 10
            }
          }
        }
      }
    },
    "deletionResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Customer deleted"
        },
        "data": {
          "type": "object",
          "properties": {
            "customer_id": {
              "type": "integer",
              "format": "int64",
              "example": 10
            }
          }
        }
      }
    },
    "unauthorizedResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 401
        },
        "message": {
          "type": "string",
          "example": "Unauthorized"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "The authorization token is missing or is invalid!"
          }
        }
      }
    },
    "notFoundResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 404
        },
        "message": {
          "type": "string",
          "example": "Customer not found"
        }
      }
    },
    "badRequestResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 406
        },
        "message": {
          "type": "string",
          "example": "Bad request"
        },
        "errors": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Name is required"
            },
            "gender": {
              "type": "string",
              "example": "Gender is required"
            },
            "date_of_birth": {
              "type": "string",
              "example": "Date of birth is not valid, must be in the format dd/mm/yyyy"
            },
            "state": {
              "type": "string",
              "example": "State is required"
            },
            "city": {
              "type": "string",
              "example": "City is required"
            },
            "street": {
              "type": "string",
              "example": "Street is required"
            },
            "number": {
              "type": "string",
              "example": "Number is required"
            },
            "zip_code": {
              "type": "string",
              "example": "Zip code is required"
            },
            "email": {
              "type": "string",
              "example": "Email is not valid email address"
            },
            "telephone": {
              "type": "string",
              "example": "Telephone must be in the format (00) 0000-0000 or (00) 0 0000-0000"
            },
            "document_number": {
              "type": "string",
              "example": "Document number is required"
            },
            "document_type": {
              "type": "string",
              "example": "Document type is required"
            },
            "status": {
              "type": "string",
              "example": "Status is not valid"
            },
            "username": {
              "type": "string",
              "example": "Username is not valid"
            },
            "password": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Password must have at least one special character"
              }
            }
          }
        }
      }
    },
    "errorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "Internal server error"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Error message"
          }
        }
      }
    },
    "listResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Customers List"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          }
        }
      }
    },
    "Customer": {
      "type": "object",
      "required": [
        "name",
        "gender",
        "date_of_birth",
        "state",
        "city",
        "street",
        "number",
        "zip_code",
        "email",
        "telephone",
        "document_number",
        "document_type",
        "status",
        "username",
        "password"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "gender": {
          "type": "string",
          "example": "M"
        },
        "date_of_birth": {
          "type": "string",
          "example": "01/01/1970"
        },
        "state": {
          "type": "string",
          "example": "SP"
        },
        "city": {
          "type": "string",
          "example": "São Paulo"
        },
        "street": {
          "type": "string",
          "example": "Av. Paulista"
        },
        "number": {
          "type": "string",
          "example": "1000"
        },
        "zip_code": {
          "type": "string",
          "example": "01001-000"
        },
        "email": {
          "type": "string",
          "example": "qg8zZ@example.com"
        },
        "telephone": {
          "type": "string",
          "example": "(11) 1 1111-1111"
        },
        "document_number": {
          "type": "string",
          "example": "091.681.160-39"
        },
        "document_type": {
          "type": "string",
          "example": "CPF"
        },
        "status": {
          "type": "int",
          "example": 1
        },
        "comments": {
          "type": "string",
          "example": "some comments"
        },
        "username": {
          "type": "string",
          "example": "johndoe"
        },
        "password": {
          "type": "string",
          "example": "johndoe$t3AA"
        }
      },
      "xml": {
        "name": "customer"
      }
    }
  }
}
